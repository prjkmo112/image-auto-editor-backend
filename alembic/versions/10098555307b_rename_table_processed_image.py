"""rename table processed_image

Revision ID: 10098555307b
Revises: dc86721534dc
Create Date: 2025-09-21 05:14:41.737741

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '10098555307b'
down_revision: Union[str, Sequence[str], None] = 'dc86721534dc'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('processed_images',
    sa.Column('id', sa.BigInteger(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1), nullable=False),
    sa.Column('marked_file_path', sa.String(length=500), nullable=False),
    sa.Column('marked_file_type', sa.String(length=10), server_default=sa.text("'local'::character varying"), nullable=False),
    sa.Column('marked_file_hash', sa.String(length=64), nullable=False),
    sa.Column('sliced_file_path', sa.String(length=500), nullable=False),
    sa.Column('sliced_file_type', sa.String(length=10), server_default=sa.text("'local'::character varying"), nullable=False),
    sa.Column('sliced_file_hash', sa.String(length=64), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('marked_file_size', sa.Integer(), nullable=True),
    sa.Column('marked_file_mime_type', sa.String(length=50), nullable=True),
    sa.Column('marked_url_id', sa.String(length=255), nullable=True),
    sa.Column('sliced_file_size', sa.Integer(), nullable=True),
    sa.Column('sliced_file_mime_type', sa.String(length=50), nullable=True),
    sa.Column('sliced_url_id', sa.String(length=255), nullable=True),
    sa.CheckConstraint("marked_file_hash::text ~ '^[0-9a-f]{64}$'::text", name='processed_images_marked_file_hash_check'),
    sa.CheckConstraint("marked_file_mime_type::text ~* '^image/'::text", name='processed_images_marked_file_mime_type_check'),
    sa.CheckConstraint("sliced_file_hash::text ~ '^[0-9a-f]{64}$'::text", name='processed_images_sliced_file_hash_check'),
    sa.CheckConstraint("sliced_file_mime_type::text ~* '^image/'::text", name='processed_images_sliced_file_mime_type_check'),
    sa.PrimaryKeyConstraint('id', name='processed_images_pkey'),
    sa.UniqueConstraint('marked_file_hash', name='processed_images_marked_file_hash_key'),
    sa.UniqueConstraint('sliced_file_hash', name='processed_images_sliced_file_hash_key')
    )
    op.create_index('processed_images_created_at_index', 'processed_images', ['created_at'], unique=False)
    op.drop_index(op.f('processed_image_created_at_index'), table_name='processed_image')
    op.drop_table('processed_image')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('processed_image',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('marked_file_path', sa.VARCHAR(length=500), autoincrement=False, nullable=False),
    sa.Column('marked_file_type', sa.VARCHAR(length=10), server_default=sa.text("'local'::character varying"), autoincrement=False, nullable=False),
    sa.Column('marked_file_hash', sa.VARCHAR(length=64), autoincrement=False, nullable=False),
    sa.Column('sliced_file_path', sa.VARCHAR(length=500), autoincrement=False, nullable=False),
    sa.Column('sliced_file_type', sa.VARCHAR(length=10), server_default=sa.text("'local'::character varying"), autoincrement=False, nullable=False),
    sa.Column('sliced_file_hash', sa.VARCHAR(length=64), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('marked_file_size', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('marked_file_mime_type', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('marked_url_id', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('sliced_file_size', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('sliced_file_mime_type', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('sliced_url_id', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.CheckConstraint("marked_file_hash::text ~ '^[0-9a-f]{64}$'::text", name=op.f('processed_image_marked_file_hash_check')),
    sa.CheckConstraint("marked_file_mime_type::text ~* '^image/'::text", name=op.f('processed_image_marked_file_mime_type_check')),
    sa.CheckConstraint("sliced_file_hash::text ~ '^[0-9a-f]{64}$'::text", name=op.f('processed_image_sliced_file_hash_check')),
    sa.CheckConstraint("sliced_file_mime_type::text ~* '^image/'::text", name=op.f('processed_image_sliced_file_mime_type_check')),
    sa.PrimaryKeyConstraint('id', name=op.f('processed_image_pkey')),
    sa.UniqueConstraint('marked_file_hash', name=op.f('processed_image_marked_file_hash_key'), postgresql_include=[], postgresql_nulls_not_distinct=False),
    sa.UniqueConstraint('sliced_file_hash', name=op.f('processed_image_sliced_file_hash_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_index(op.f('processed_image_created_at_index'), 'processed_image', ['created_at'], unique=False)
    op.drop_index('processed_images_created_at_index', table_name='processed_images')
    op.drop_table('processed_images')
    # ### end Alembic commands ###
